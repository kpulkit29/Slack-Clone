import { TokenWithExpiry } from './authenticator';
import BaseClient from './base_client';
import { AuthenticateOptions, AuthenticatePayload, AuthenticationResponse, RequestOptions, IncomingMessageWithBody } from './common';
export interface InstanceOptions {
    locator: string;
    key: string;
    serviceName: string;
    serviceVersion: string;
    port?: number;
    host?: string;
    client?: BaseClient;
}
export default class Instance {
    private client;
    private id;
    private serviceName;
    private serviceVersion;
    private cluster;
    private platformVersion;
    private keyId;
    private keySecret;
    private host;
    private authenticator;
    constructor(options: InstanceOptions);
    request(options: RequestOptions): Promise<IncomingMessageWithBody>;
    authenticate(authenticatePayload: AuthenticatePayload, options: AuthenticateOptions): AuthenticationResponse;
    authenticateWithRefreshToken(authenticatePayload: AuthenticatePayload, options: AuthenticateOptions): AuthenticationResponse;
    generateAccessToken(options: AuthenticateOptions): TokenWithExpiry;
}
