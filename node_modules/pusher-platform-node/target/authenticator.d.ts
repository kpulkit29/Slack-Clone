import { AuthenticateOptions, AuthenticatePayload, AuthenticationResponse } from './common';
export interface TokenWithExpiry {
    token: string;
    expires_in: number;
}
export interface RefreshToken {
    token: string;
}
export default class Authenticator {
    private instanceId;
    private instanceKeyId;
    private instanceKeySecret;
    private tokenExpiry;
    constructor(instanceId: string, instanceKeyId: string, instanceKeySecret: string, tokenExpiry?: number);
    authenticate(authenticatePayload: AuthenticatePayload, options: AuthenticateOptions): AuthenticationResponse;
    authenticateWithRefreshToken(authenticatePayload: AuthenticatePayload, options: AuthenticateOptions): AuthenticationResponse;
    private authenticateUsingClientCredentials(options, withRefreshToken?);
    private authenticateUsingRefreshToken(oldRefreshToken, options);
    generateAccessToken(options: AuthenticateOptions): TokenWithExpiry;
    private generateRefreshToken(options);
}
